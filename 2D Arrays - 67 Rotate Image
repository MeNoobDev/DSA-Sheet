#include <bits/stdc++.h>
using namespace std;

int main()
{
    // Can also solve this problem
    // by first converting the matrix to its transpose
    // and then reversing every row
    // its easier to understand that way
    ios::sync_with_stdio(0);
    cin.tie(0);
    int m, n;
    cin >> m >> n;
    int matrix[m][n];
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
            cin >> matrix[i][j];
    }
    int left = 0;
    int right = m - 1;
    while (left < right)
    {
        for (int i = 0; i < right - left; i++)
        {

            int top = left;
            int bottom = right;
            // store the element at 0,0 in temp variable
            int temp = matrix[top][left + i];
            // move the bottom left(2,0) to 0,0
            matrix[top][left + i] = matrix[bottom - i][left];
            // move the bottom right to bottom left (2,2) to (2,0)
            matrix[bottom - i][left] = matrix[bottom][right - i];
            // move the top right to bottom right (0,2) to (2,2)
            matrix[bottom][right - i] = matrix[top + i][right];
            // move the top left to top right () to ()
            matrix[top + i][right] = temp;
        }
        left++;
        right--;
    }
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
            cout << matrix[i][j] << " ";
        cout << endl;
    }
    return 0;
}
